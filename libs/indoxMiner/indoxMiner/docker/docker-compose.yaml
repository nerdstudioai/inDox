version: "0.1"

services:
  detr:
    build:
      context: .
      dockerfile: models/detr.dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  detectron2:
    build:
      context: .
      dockerfile: models/detectron2.dockerfile
    ports:
      - "8002:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  detrclip:
    build:
      context: .
      dockerfile: models/detrclip.dockerfile
    ports:
      - "8003:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  groundingdino:
    build:
      context: .
      dockerfile: models/groundingdino.dockerfile
    ports:
      - "8004:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  kosmos2:
    build:
      context: .
      dockerfile: models/kosmos2.dockerfile
    ports:
      - "8005:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  owlvit:
    build:
      context: .
      dockerfile: models/owlvit.dockerfile
    ports:
      - "8006:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  rtdetr:
    build:
      context: .
      dockerfile: models/rtdetr.dockerfile
    ports:
      - "8007:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  sam2:
    build:
      context: .
      dockerfile: models/sam2.dockerfile
    ports:
      - "8008:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  yolov5:
    build:
      context: .
      dockerfile: models/YOLO/YOLOv5/yolov5.dockerfile
    ports:
      - "8009:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  yolov6:
    build:
      context: .
      dockerfile: models/YOLO/YOLOv6/yolov6.dockerfile
    ports:
      - "8010:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  yolov7:
    build:
      context: .
      dockerfile: models/YOLO/YOLOv7/yolov7.dockerfile
    ports:
      - "8011:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  yolov8:
    build:
      context: .
      dockerfile: models/YOLO/YOLOv8/yolov8.dockerfile
    ports:
      - "8012:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  yolov10:
    build:
      context: .
      dockerfile: models/YOLO/YOLOv10/yolov10.dockerfile
    ports:
      - "8013:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  yolov11:
    build:
      context: .
      dockerfile: models/YOLO/YOLOv11/yolov11.dockerfile
    ports:
      - "8014:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  yolox:
    build:
      context: .
      dockerfile: models/YOLO/YOLOX/yolox.dockerfile
    ports:
      - "8015:8000"
    volumes:
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - detr
      - yolov8
      - detectron2
      - detrclip
      - groundingdino
      - kosmos2
      - owlvit
      - rtdetr
      - sam2
      - yolov5
      - yolov6
      - yolov7
      - yolov10
      - yolov11
      - yolox
